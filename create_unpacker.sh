#!/bin/bash -e

# Usage:
#
#   1) put all the files you want to package in source/
#   2) run the script
#   3) now you have in packed/ your self-extracting archive

function findHomeFolder {
	local FILE_PATH="${BASH_SOURCE[0]}"

	if [ -L "$FILE_PATH" ]; then
		local PHYS_FILE_PATH="$(dirname $(readlink -f $FILE_PATH))"
	else
		local PHYS_FILE_PATH="$(dirname $FILE_PATH)"
	fi

	cd $PHYS_FILE_PATH
	local ABS_FILE_PATH="$(pwd)"
	cd - >/dev/null

	echo $ABS_FILE_PATH
}

HOME_FOLDER="$(findHomeFolder)"
UNPACKER="$HOME_FOLDER/extractor.sh"
SOURCE_FOLDER="$HOME_FOLDER/source" # Only what's in this folder (or is autogenerated by this script) ends up in the unpacker
JRUBY_PATH="$SOURCE_FOLDER/jruby-1.7.3" # JRuby is only used by the bootstrap (if present) ; will be removed by the unpacker once the bootstrap terminates
PAYLOAD_FOLDER="$SOURCE_FOLDER/payload" # Everything that's in this folder is included in the unpacker
BOOTSTRAP_FILE="$SOURCE_FOLDER/bootstrap.rb" # If present, is executed when unpacking and then removed; if absent, jruby is not packed
DESTINATION_FOLDER="$HOME_FOLDER/packed"
TEMPORARY_UNPACKER="$DESTINATION_FOLDER/temp.sh"
TEMPORARY_ARCHIVE="$DESTINATION_FOLDER/temp.zip"
OUTPUT_FILE="$DESTINATION_FOLDER/script.sh"

# Recursively converges to the size the unpacker script will have once
# its size is included in it
function get_unpacker_size {
	if [ $1 ]; then
		local UNPACKER_SIZE=$1
	else
		local UNPACKER_SIZE=0
	fi

	local NEW_UNPACKER_SIZE="$(cat $UNPACKER | sed "s|UNPACKER_SIZE=.*|UNPACKER_SIZE=$UNPACKER_SIZE|" | wc -c | tr -d ' ')"
	if [ $NEW_UNPACKER_SIZE -eq $UNPACKER_SIZE ]; then
	 	echo "$NEW_UNPACKER_SIZE"
	else
		echo "$(get_unpacker_size $NEW_UNPACKER_SIZE)"
	fi
}

# creating destination folder if absent
if [ ! -d "$DESTINATION_FOLDER" ]; then
	mkdir "$DESTINATION_FOLDER"
else
	# exiting if the target folder is not empty
	if [ "$(ls -A $DESTINATION_FOLDER)" ]; then
		echo
		echo "Folder $DESTINATION_FOLDER is not empty. Please empty it and retry."
		echo
		exit 1
	fi
fi

#creating actual unpacker code from template, hardcoding in it its size so that is can split off its payload
cat "$UNPACKER" | sed "s|UNPACKER_SIZE=.*|UNPACKER_SIZE=$(get_unpacker_size)|" > "$TEMPORARY_UNPACKER"

cd "$SOURCE_FOLDER"
zip -9ry "$TEMPORARY_ARCHIVE" "$(basename $PAYLOAD_FOLDER)"
if [ -e "$BOOTSTRAP_FILE" ]; then
	zip -9ry "$TEMPORARY_ARCHIVE" "$(basename $BOOTSTRAP_FILE)"
	zip -9ry "$TEMPORARY_ARCHIVE" "$(basename $JRUBY_PATH)"
fi
cd -

cat "$TEMPORARY_UNPACKER" "$TEMPORARY_ARCHIVE" > "$OUTPUT_FILE"

chmod +x "$OUTPUT_FILE"

echo
echo "Packaging successfully complete. Your self-extracting file is $OUTPUT_FILE"
echo

# deleting temp files
rm -f "$TEMPORARY_UNPACKER" "$TEMPORARY_ARCHIVE"